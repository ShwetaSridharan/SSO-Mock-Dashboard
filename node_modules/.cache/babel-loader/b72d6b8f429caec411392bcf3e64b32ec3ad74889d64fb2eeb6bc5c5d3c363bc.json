{"ast":null,"code":"const simulateBackend = () => {\n  const users = [{\n    email: 'user1@example.com',\n    invited_at: new Date(Date.now() - 25 * 60 * 60 * 1000)\n  }, {\n    email: 'user2@example.com',\n    invited_at: new Date(Date.now() - 23 * 60 * 60 * 1000)\n  }, {\n    email: 'user3@example.com',\n    invited_at: new Date(Date.now() - 26 * 60 * 60 * 1000)\n  }];\n  const unprovisionedUsers = users.filter(user => new Date() - user.invited_at > 24 * 60 * 60 * 1000);\n  return unprovisionedUsers.map(user => user.email);\n};\nexport default simulateBackend;","map":{"version":3,"names":["simulateBackend","users","email","invited_at","Date","now","unprovisionedUsers","filter","user","map"],"sources":["/Users/shwetasridharan/sso-mockup/src/utils/ssoChecker.js"],"sourcesContent":["const simulateBackend = () => {\n    const users = [\n      { email: 'user1@example.com', invited_at: new Date(Date.now() - 25 * 60 * 60 * 1000) },\n      { email: 'user2@example.com', invited_at: new Date(Date.now() - 23 * 60 * 60 * 1000) },\n      { email: 'user3@example.com', invited_at: new Date(Date.now() - 26 * 60 * 60 * 1000) }\n    ];\n  \n    const unprovisionedUsers = users.filter(user => \n      (new Date() - user.invited_at) > 24 * 60 * 60 * 1000\n    );\n  \n    return unprovisionedUsers.map(user => user.email);\n  };\n  \n  export default simulateBackend;"],"mappings":"AAAA,MAAMA,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMC,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EAAE,CAAC,EACtF;IAAEH,KAAK,EAAE,mBAAmB;IAAEC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EAAE,CAAC,EACtF;IAAEH,KAAK,EAAE,mBAAmB;IAAEC,UAAU,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;EAAE,CAAC,CACvF;EAED,MAAMC,kBAAkB,GAAGL,KAAK,CAACM,MAAM,CAACC,IAAI,IACzC,IAAIJ,IAAI,CAAC,CAAC,GAAGI,IAAI,CAACL,UAAU,GAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAClD,CAAC;EAED,OAAOG,kBAAkB,CAACG,GAAG,CAACD,IAAI,IAAIA,IAAI,CAACN,KAAK,CAAC;AACnD,CAAC;AAED,eAAeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}