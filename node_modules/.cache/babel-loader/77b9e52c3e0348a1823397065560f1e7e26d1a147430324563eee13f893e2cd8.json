{"ast":null,"code":"var _jsxFileName = \"/Users/shwetasridharan/sso-mockup/src/components/SSOProvisioningNotification.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SSOProvisioningNotification = ({\n  users\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sso-notification\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending SSO Provisioning Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users pending provisioning.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map((email, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"User \", email, \" has not been provisioned!\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = SSOProvisioningNotification;\nexport default SSOProvisioningNotification;\nvar _c;\n$RefreshReg$(_c, \"SSOProvisioningNotification\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SSOProvisioningNotification","users","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","email","index","_c","$RefreshReg$"],"sources":["/Users/shwetasridharan/sso-mockup/src/components/SSOProvisioningNotification.js"],"sourcesContent":["import React from 'react';\n\nconst SSOProvisioningNotification = ({ users }) => {\n  return (\n    <div className=\"sso-notification\">\n      <h2>Pending SSO Provisioning Notifications</h2>\n      {users.length === 0 ? (\n        <p>No users pending provisioning.</p>\n      ) : (\n        <ul>\n          {users.map((email, index) => (\n            <li key={index}>User {email} has not been provisioned!</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default SSOProvisioningNotification;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,2BAA2B,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACjD,oBACEF,OAAA;IAAKG,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BJ,OAAA;MAAAI,QAAA,EAAI;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9CN,KAAK,CAACO,MAAM,KAAK,CAAC,gBACjBT,OAAA;MAAAI,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErCR,OAAA;MAAAI,QAAA,EACGF,KAAK,CAACQ,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACtBZ,OAAA;QAAAI,QAAA,GAAgB,OAAK,EAACO,KAAK,EAAC,4BAA0B;MAAA,GAA7CC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CAC3D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACK,EAAA,GAfIZ,2BAA2B;AAiBjC,eAAeA,2BAA2B;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}