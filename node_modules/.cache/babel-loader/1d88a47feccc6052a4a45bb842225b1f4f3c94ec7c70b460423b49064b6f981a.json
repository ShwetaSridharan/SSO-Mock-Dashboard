{"ast":null,"code":"var _jsxFileName = \"/Users/shwetasridharan/SSO-Mock-Dashboard/src/components/AdminView.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminView = ({\n  unprovisionedUsers\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending SSO Provisioning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), unprovisionedUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users pending provisioning.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: unprovisionedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.email\n      }, user.email, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = AdminView;\nexport default AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AdminView","unprovisionedUsers","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","user","email","_c","$RefreshReg$"],"sources":["/Users/shwetasridharan/SSO-Mock-Dashboard/src/components/AdminView.js"],"sourcesContent":["import React from 'react';\n\nconst AdminView = ({ unprovisionedUsers }) => {\n  return (\n    <div>\n      <h2>Admin View</h2>\n      <h3>Pending SSO Provisioning</h3>\n      {unprovisionedUsers.length === 0 ? (\n        <p>No users pending provisioning.</p>\n      ) : (\n        <ul>\n          {unprovisionedUsers.map((user) => (\n            <li key={user.email}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default AdminView;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAC5C,oBACEF,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBP,OAAA;MAAAG,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChCL,kBAAkB,CAACM,MAAM,KAAK,CAAC,gBAC9BR,OAAA;MAAAG,QAAA,EAAG;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAErCP,OAAA;MAAAG,QAAA,EACGD,kBAAkB,CAACO,GAAG,CAAEC,IAAI,iBAC3BV,OAAA;QAAAG,QAAA,EAAsBO,IAAI,CAACC;MAAK,GAAvBD,IAAI,CAACC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACK,EAAA,GAhBIX,SAAS;AAkBf,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}